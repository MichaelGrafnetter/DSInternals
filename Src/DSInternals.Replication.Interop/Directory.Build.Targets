<Project>
  <Import Project="$(MSBuildBinPath)\Microsoft.Common.targets"/>  
  <PropertyGroup>
    <!-- Custom properties referenced by the Content target below -->
    <!-- We need to rename the platform to match the values that are used in the PROCESSOR_ARCHITECTURE environment variable. -->
    <TargetProcessorArchitecture Condition="'$(Platform)'=='x64'">amd64</TargetProcessorArchitecture>
    <TargetProcessorArchitecture Condition="'$(Platform)'=='Win32'">x86</TargetProcessorArchitecture>
    <TargetProcessorArchitecture Condition="'$(Platform)'=='ARM64' OR '$(Platform)'=='ARM'">arm64</TargetProcessorArchitecture>
    <!-- Sample path: C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Redist\MSVC\14.34.31931\arm64\Microsoft.VC143.CRT\msvcp140.dll -->
    <CppRuntimeRedistPath>$(CppRuntimeFilesPath.Replace(';',''))\Microsoft.VC$(PlatformToolsetVersion).CRT\</CppRuntimeRedistPath>
  </PropertyGroup>
  <ItemGroup>
  <!-- Copy the C++ runtime files to the output directory.
       Note: The msvcr140.dll file has been replaced by vcruntime140.dll since Visual Studio 2017. The vcruntime140_1.dll file is also required.
             Moreover, $(PlatformToolsetVersion) equals to 150 instead of 140 and thus does not match the names of the runtime files.-->
    <Content Include="$(CppRuntimeRedistPath)msvc????.dll;$(CppRuntimeRedistPath)vcruntime???.dll;$(CppRuntimeRedistPath)vcruntime???_?.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>$(TargetProcessorArchitecture)\%(Filename)%(Extension)</TargetPath>
    </Content>
  </ItemGroup>
</Project>
