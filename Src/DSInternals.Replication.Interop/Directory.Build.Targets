<Project>
  <Target Name="CopyDllsToPowerShell" AfterTargets="Build">
    <PropertyGroup>
      <!-- Custom properties referenced by the Copy tasks below -->
      <!-- We need to rename the platform to match the values that are used in the PROCESSOR_ARCHITECTURE environment variable. -->
      <TargetProcessorArchitecture Condition="'$(Platform)'=='x64'">amd64</TargetProcessorArchitecture>
      <TargetProcessorArchitecture Condition="'$(Platform)'=='Win32'">x86</TargetProcessorArchitecture>
      <TargetProcessorArchitecture Condition="'$(Platform)'=='ARM64'">arm64</TargetProcessorArchitecture>
      <!-- Sample path: C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Redist\MSVC\14.34.31931\arm64\Microsoft.VC143.CRT\msvcp140.dll -->
      <CppRuntimeRedistPath>$(CppRuntimeFilesPath.Replace(';',''))\Microsoft.VC$(PlatformToolsetVersion).CRT\</CppRuntimeRedistPath>
      <!-- DotNet Framework variable -->
      <PowerShellModulePath Condition="'$(CLRSupport)' == 'true'">$(MSBuildThisFileDirectory)..\..\Build\bin\DSInternals.PowerShell\$(Configuration)\DSInternals\net48\$(TargetProcessorArchitecture)\</PowerShellModulePath>
      <!-- DotNet Core variable -->
      <PowerShellModulePath Condition="'$(CLRSupport)' == 'NetCore'">$(MSBuildThisFileDirectory)..\..\Build\bin\DSInternals.PowerShell\$(Configuration)\DSInternals\$(TargetFramework)-$(TargetPlatformIdentifier)\$(TargetProcessorArchitecture)\</PowerShellModulePath>
    </PropertyGroup>
    <ItemGroup>
      <!-- Note: The msvcr140.dll file has been replaced by vcruntime140.dll since Visual Studio 2017. The vcruntime140_1.dll file is also required.
                 Moreover, $(PlatformToolsetVersion) equals to 150 instead of 140 and thus does not match the names of the runtime files.-->
      <CppRuntimeBinaries Include="$(CppRuntimeRedistPath)msvc????.dll;$(CppRuntimeRedistPath)vcruntime???.dll;$(CppRuntimeRedistPath)vcruntime???_?.dll" />
    </ItemGroup>
    <!-- Copy the C++ runtime files to the PowerShell module. -->
    <Copy SourceFiles="@(CppRuntimeBinaries)" DestinationFolder="$(PowerShellModulePath)" />
    <!-- Copy the compiled DLLs to the PowerShell module. -->
    <Copy SourceFiles="$(OutDir)$(TargetFileName)" DestinationFolder="$(PowerShellModulePath)" />
    <!-- Include the debug symbols -->
    <Copy SourceFiles="$(OutDir)$(TargetName).pdb" DestinationFolder="$(PowerShellModulePath)" />
  </Target>
  <!-- This is a dummy NuGet pack target to avoid error MSB4057: The target "Pack" does not exist in the project. -->
  <Target Name="Pack" />
</Project>
