name: Release

on:
  workflow_dispatch:
    inputs:
      certificate_sign:
        description: 'Sign the binaries and packages using a certificate stored in Azure Key Vault?'
        required: true
        type: boolean
        default: false
      strong_name_sign:
        description: 'Sign the assemblies using a strong name key stored in GitHub Secrets?'
        required: true
        type: boolean
        default: false
      create_github_release:
        description: 'Create a GitHub Release?'
        required: true
        type: boolean
        default: false
      publish_nuget:
        description: 'Publish packages to NuGet Gallery?'
        required: true
        type: boolean
        default: false
      publish_powershell:
        description: 'Publish module to PowerShell Gallery?'
        required: true
        type: boolean
        default: false
      publish_chocolatey:
        description: 'Publish module to Chocolatey Community repository?'
        required: true
        type: boolean
        default: false
      release_version:
        description: 'Version'
        required: true
        type: string
        default: '5.x'

permissions:
  id-token: write
  contents: write

jobs:
  build:
    name: 'Build'
    runs-on: windows-latest
    timeout-minutes: 10
    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Restore Strong Name Key
      if: ${{ inputs.strong_name_sign }}
      working-directory: Keys
      shell: powershell
      env:
        STRONG_NAME_KEY: ${{ secrets.STRONG_NAME_KEY }}
      run: |
        if($null -ne $env:STRONG_NAME_KEY)
        {
            Write-Host 'Creating file Keys/DSInternals.Private.snk...'
            [byte[]] $privateKey = [System.Convert]::FromBase64String($env:STRONG_NAME_KEY)
            [System.IO.File]::WriteAllBytes('DSInternals.Private.snk', $privateKey)
        }
        else
        {
            Write-Warning 'The STRONG_NAME_KEY secret is not available. Skipping SNK file creation.'
        }

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
      with:
        msbuild-architecture: x64 # default is x86

    - name: Restore NuGet Packages
      working-directory: Src
      run: msbuild.exe -target:Restore -property:RestorePackagesConfig=true -noLogo
      
    - name: Build AMD64
      working-directory: Src
      run: msbuild.exe -target:Build -property:Configuration=Release -property:Platform=x64 -noLogo
    
    - name: Build ARM64
      working-directory: Src
      run: msbuild.exe -target:Build -property:Configuration=Release -property:Platform=ARM64 -noLogo

    - name: Build x86
      working-directory: Src
      run: msbuild.exe -target:Build -property:Configuration=Release -property:Platform=x86 -noLogo
              
    # TODO: Cache NuGet packages
    # TODO: Tests
    # TODO: Sign binaries
    # TODO: Sign module
    # TODO: Sign NuGet Packages
    # TODO: Publish NuGet packages
    # TODO: Create GitHub release
    # TODO: Publish to PowerShell Gallery
    # TODO: Publish to Chocolatey
